CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:
    Bit(in=indata[0], load=load, out=storedata0);
    Bit(in=indata[1], load=load, out=storedata1);
    Bit(in=indata[2], load=load, out=storedata2);
    Bit(in=indata[3], load=load, out=storedata3);
    Bit(in=nextactive, load=true, out=active);
    Bit(in=nextcounter0, load=true, out=counter0);
    Bit(in=nextcounter1, load=true, out=counter1);
    Bit(in=out0, load=true, out=out1);

    Not(in=active, out=notactive);
    Not(in=out1, out=out2);
    Not(in=out0, out=out3);

    And(a=counter0, b=counter1, out=counter3);
    And(a=counter3, b=active, out=out0);
    And(a=enable, b=notactive, out=out4);
    And(a=active, b=out3, out=out5);
    And(a=counter0, b=active, out=carryout0);

    Or(a=out4, b=out5, out=nextactive);

    Xor(a=counter0, b=active, out=out6);
    Xor(a=counter1, b=carryout0, out=out7);

    Mux(a=counter0, b=out6, sel=active, out=counternext0);
    Mux(a=counternext0, b=false, sel=out4, out=nextcounter0);
    Mux(a=counter1, b=out7, sel=active, out=counternext1);
    Mux(a=counternext1, b=false, sel=out4, out=nextcounter1);
    Mux(a=storedata0, b=storedata1, sel=counter0, out=muxout0);
    Mux(a=storedata2, b=storedata3, sel=counter0, out=muxout1);
    Mux(a=muxout0, b=muxout1, sel=counter1, out=selectedbit);

    And(a=selectedbit, b=active, out=sout);
    And(a=out0, b=out2, out=complete);
}