CHIP DisplayCounter201720022 {
    IN inc, reset;
    OUT a, b, c, d, e, f, g;

    PARTS:
    // 4-bit register to store current count (implicit clock)
    Register4(in=nextValue[0..3], load=true, out=currentValue[0..3]);

    // 16-bit incrementer (Incl6) for 4-bit counter logic
    // Extend 4-bit current value to 16 bits, increment, then truncate back to 4 bits
    Incl6(in[0..15]=0, in[0..3]=currentValue[0..3], out=incremented16);
    Splitter(in=incremented16, out[0..3]=incrementedValue[0..3], out[4..15]=dummy);

    // Mux to choose between current value and incremented value
    Mux4(a=currentValue[0..3], b=incrementedValue[0..3], sel=inc, out=afterInc[0..3]);

    // Mux to override with 0 when reset is active (reset has priority)
    Mux4(a=afterInc[0..3], b=0, sel=reset, out=nextValue[0..3]);

    // 4-bit to 7-segment decoder (maps 0-15 to hex digits 0-F)
    SevenSegDecoder(
        in=currentValue[0..3],
        a=a, b=b, c=c, d=d, e=e, f=f, g=g
    );
}
